/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectoalojamento;

import javax.swing.*;
import java.awt.event.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.text.NumberFormat;
import javax.swing.border.*;

/**
 *
 * @author Gustavo Vieira
 */
public class Application2 extends javax.swing.JFrame {

    /**
     * Creates new form Application2
     */
    public Application2() {
        initComponents();
    }
    
    static JFrame j;
    static JButton button1;
    static JLabel label1, label2, label3;
    static JTextField textField1, textField2;
    static JCheckBox dollarSign, commaSeparator;
    static JRadioButton addNums, subtractNums, multNums, divideNums;
    static JSlider howManyTimes;
    
    static double number1, number2, totalCalc;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application2().setVisible(true);
            }
        });
        
        j = new JFrame();
        
        j.setSize(400,400);
        j.setLocationRelativeTo(null);
        j.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        j.setTitle("My Third Frame");
        JPanel thePanel = new JPanel();
        button1 = new JButton("Calculate");
        ListenForButton lForButton = new ListenForButton();
        button1.addActionListener(lForButton);
        thePanel.add(button1);
        
        label1 = new JLabel("Number 1");
        thePanel.add(label1);
        
        textField1 = new JTextField("",5);
        thePanel.add(textField1);
        
        label2 = new JLabel("Number 2");
        thePanel.add(label2);
        
        textField2 = new JTextField("",5);
        thePanel.add(textField2);
        
        dollarSign = new JCheckBox("Dollars");
        commaSeparator = new JCheckBox("Commas", true); // True por default (check / visto);
        thePanel.add(dollarSign);
        thePanel.add(commaSeparator, true); // True por default (check / visto); nao sei porquê mas tem de tar nos 2?
        
        addNums = new JRadioButton("Add");
        subtractNums = new JRadioButton("Subtract");
        multNums = new JRadioButton("Multiply");
        divideNums = new JRadioButton("Divide");
        
        // Cria um grupo de botões onde quando um é seleccionado os outros desseleccionam
        ButtonGroup operation = new ButtonGroup();
        operation.add(addNums);
        operation.add(subtractNums);
        operation.add(multNums);
        operation.add(divideNums);
        
        JPanel operPanel = new JPanel();
        Border operBorder = BorderFactory.createTitledBorder("Operation");
        
        operPanel.setBorder(operBorder);
        
        // Tem de se adicionar 1 a 1 não o operation
        operPanel.add(addNums);
        operPanel.add(subtractNums);
        operPanel.add(multNums);
        operPanel.add(divideNums);
        
        addNums.setSelected(true); // Selected como default
        
        thePanel.add(operPanel);
        
        label3 = new JLabel("Perform How Many Times");
        thePanel.add(label3);
        
        // Min, Max, Default
        howManyTimes = new JSlider(0, 99, 1);
        
        howManyTimes.setMinorTickSpacing(1);    // Um tick a cada 1 numero
        howManyTimes.setMajorTickSpacing(10);   // Um tick maior a cada 10
        howManyTimes.setPaintTicks(true);       // Pinta os ticks
        howManyTimes.setPaintLabels(true);      // Mete números em baixo
        
        ListenForSlider lForSlider = new ListenForSlider();
        howManyTimes.addChangeListener(lForSlider);
        
        thePanel.add(howManyTimes);
        j.add(thePanel);
        j.setVisible(true);
        
        textField1.requestFocus();
    }

    private static class ListenForButton implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            if(e.getSource() == button1) {
                try
                {
                    number1 = Double.parseDouble(textField1.getText());
                    number2 = Double.parseDouble(textField2.getText());
                }
                catch(NumberFormatException ex)
                {
                    JOptionPane.showMessageDialog(Application2.j, "Please Enter the Right Info", "Error", JOptionPane.ERROR_MESSAGE); // Popup com erro
                    System.exit(0); // fecha a aplicaçao toda de java
                }
                
                if(addNums.isSelected())
                {
                    totalCalc = addNumbers(number1, number2, howManyTimes.getValue());
                }
                else if(subtractNums.isSelected())
                {
                    totalCalc = subtractNumbers(number1, number2, howManyTimes.getValue());
                }
                else if(multNums.isSelected())
                {
                    totalCalc = multiplyNumbers(number1, number2, howManyTimes.getValue());
                }
                else if(divideNums.isSelected())
                {
                    totalCalc = divideNumbers(number1, number2, howManyTimes.getValue());
                }
            }
            
            if(dollarSign.isSelected()) {
                NumberFormat numFormat = NumberFormat.getCurrencyInstance();
                JOptionPane.showMessageDialog(Application2.j, numFormat.format(totalCalc), "Solution", JOptionPane.INFORMATION_MESSAGE);
            } else if(commaSeparator.isSelected()) {
                NumberFormat numFormat = NumberFormat.getNumberInstance();
                JOptionPane.showMessageDialog(Application2.j, numFormat.format(totalCalc), "Solution", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(Application2.j, totalCalc, "Solution", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }
    
    private static class ListenForSlider implements ChangeListener {

        @Override
        public void stateChanged(ChangeEvent e) {
            if(e.getSource() == howManyTimes) {
                label3.setText("Perform How Many Times? " + howManyTimes.getValue() );
                
            }
        }
        
    }
    
    public static double addNumbers(double number1, double number2, int howMany) {
        double total = 0;
        
        int i = 1;
        
        while(i <= howMany) {
            total = total + (number1 + number2);
            i++;
        }
        
        return total;
    }
    
    public static double subtractNumbers(double number1, double number2, int howMany) {
        double total = 0;
        
        int i = 1;
        
        while(i <= howMany) {
            total = total + (number1 - number2);
            i++;
        }
        
        return total;
    }
    
    public static double multiplyNumbers(double number1, double number2, int howMany) {
        double total = 0;
        
        int i = 1;
        
        while(i <= howMany) {
            total = total + (number1 * number2);
            i++;
        }
        
        return total;
    }
    
    public static double divideNumbers(double number1, double number2, int howMany) {
        double total = 0;
        
        int i = 1;
        
        while(i <= howMany) {
            total = total + (number1 / number2);
            i++;
        }
        
        return total;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
